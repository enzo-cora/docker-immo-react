{"version":3,"sources":["components/admin-pages/admin-pannel/admin-pannel.module.css","components/admin-pages/new-immo/New-immo.tsx","components/admin-pages/new-article/UploadAdaptator.ts","middlewares/functions/fileTransform.ts","components/admin-pages/new-article/NewArticle.tsx","components/admin-pages/allArticles/AllArticles.tsx","components/admin-pages/admin-pannel/Admin-pannel.tsx"],"names":["module","exports","mapDispatchToProps","fetchNewImmo","connect","onSubmit","e","preventDefault","formData","FormData","elems","target","elements","elem","type","files","length","name","append","key","checked","value","rooms","className","css","column","required","accept","multiple","cols","rows","UploadAdaptator","loader","this","file","then","Promise","resolve","reject","myReader","FileReader","onloadend","default","result","readAsDataURL","console","log","FileTransform","imageUrl","fetch","res","blob","blobToBase64","dataurl","filename","arr","split","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","File","reader","onload","onerror","error","NewArticle","props","refForm","listCategorie","div","document","createElement","fileTransform","handleChange","editor","innerHTML","getData","handleSubmit","current","imgs","querySelectorAll","forEach","index","base64","getAttribute","base64ToFile","fetchNewArticle","React","createRef","ref","map","ClassicEditor","onInit","plugins","get","createUploadAdapter","onChange","onClick","Component","state","fetchAllArticles","resetInAdmin","articles","admin","useEffect","article","reference","titre","categorie","date","online","style","color","AdminPannel","url","menuAdmin","to","ulAdmin","path","render","component","NewImmo","AllArticles"],"mappings":"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","file":"static/js/4.b1659fec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuAdmin\":\"admin-pannel_menuAdmin__3Odvt\",\"ulAdmin\":\"admin-pannel_ulAdmin__3DrqU\",\"mesParagraphe\":\"admin-pannel_mesParagraphe__w1Mdh\"};","import React, {FunctionComponent} from 'react';\r\nimport css from './new-immo.module.css'\r\nimport {connect} from \"react-redux\";\r\nimport {fetchNewImmo} from \"../../../actions/actions-admin-immo\";\r\n\r\n\r\ntype state = {\r\n    resp : { any } ,\r\n    fetchNewImmo(data : FormData) : void\r\n}\r\n\r\nconst NewImmo : FunctionComponent<state> = ({fetchNewImmo})=> {\r\n\r\n\r\n    function handleSubmit (e){\r\n        e.preventDefault()\r\n        let formData = new FormData()\r\n        let elems = e.target.elements\r\n\r\n        for (let elem of elems) {\r\n            if(elem.type === 'file' && elem.files.length){\r\n                switch (elem.name){\r\n                    case 'img':\r\n                        formData.append('img',elem.files[0])\r\n                        break\r\n                    case 'imgs' :\r\n                        for(let key in elem.files){\r\n                            formData.append('imgs',elem.files[key])\r\n                        }\r\n                        break\r\n                }\r\n            }\r\n            else if(elem.type === 'checkbox'){\r\n                formData.append(elem.name,elem.checked)\r\n            }\r\n            else {\r\n                 formData.append(elem.name,elem.value)\r\n            }\r\n        }\r\n        let rooms : any = +elems['bedroom'].value + +elems['living_room'].value\r\n        formData.append('rooms',rooms)\r\n        fetchNewImmo(formData)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit} className={css.column}>\r\n\r\n                <div>Banniere\r\n                    <input required type=\"file\" name=\"img\" accept=\"image/jpeg\" />\r\n                </div>\r\n\r\n                <div>Miniatures\r\n                    <input type=\"file\" name=\"imgs\" multiple accept=\"image/jpeg\" />\r\n                </div>\r\n\r\n                <div>\r\n                    <select name=\"status\">\r\n                        <option value=\"location\">Location</option>\r\n                        <option value=\"achat\">Achat</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div>\r\n                    <select name=\"type\">\r\n                        <option value=\"maison\">Maison</option>\r\n                        <option value=\"appartement\">Maison</option>\r\n                        <option value=\"local\">Maison</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div><label>title\r\n                    <input type=\"text\" name=\"title\"/>\r\n                </label></div>\r\n\r\n                <div><label>Description\r\n                    <textarea name=\"description\" cols={100} rows={2} />\r\n                </label></div>\r\n\r\n                <div><label>surface\r\n                    <input type=\"number\" name=\"surface\"/>\r\n                </label></div>\r\n\r\n                <div><label>price\r\n                    <input type=\"number\" name=\"price\"/>\r\n                </label></div>\r\n\r\n                <div><label>bedroom\r\n                    <input type=\"number\" name=\"bedroom\"/>\r\n                </label></div>\r\n\r\n                <div><label>bathroom\r\n                    <input type=\"number\" name=\"bathroom\"/>\r\n                </label></div>\r\n\r\n                <div><label>kitchen\r\n                    <input type=\"number\" name=\"kitchen\"/>\r\n                </label></div>\r\n\r\n                <div><label>living-room\r\n                    <input type=\"number\" name=\"living_room\"/>\r\n                </label></div>\r\n\r\n                <div><label>garage\r\n                    <input type=\"checkbox\" name=\"garage\"/>\r\n                </label></div>\r\n\r\n                <div><label>terasse\r\n                    <input type=\"checkbox\" name=\"terrace\"/>\r\n                </label></div>\r\n\r\n                <div><label>country\r\n                    <input type=\"text\" name=\"country\"/>\r\n                </label></div>\r\n\r\n                <div><label>region\r\n                    <input type=\"text\" name=\"region\"/>\r\n                </label></div>\r\n\r\n                <div><label>postal_code\r\n                    <input type=\"text\" name=\"postal_code\"/>\r\n                </label></div>\r\n\r\n                <div><label>city\r\n                    <input type=\"text\" name=\"city\"/>\r\n                </label></div>\r\n\r\n                <div><label>street\r\n                    <input type=\"text\" name=\"street\"/>\r\n                </label></div>\r\n\r\n                <div><label>longitude\r\n                    <input type=\"number\" name=\"longitude\"/>\r\n                </label></div>\r\n\r\n                <div><label>latitude\r\n                    <input type=\"number\" name=\"latitude\"/>\r\n                </label></div>\r\n\r\n                <div><label>selleurName\r\n                    <input type=\"text\" name=\"sellerName\"/>\r\n                </label></div>\r\n\r\n                <div><label>selleurFirstName\r\n                    <input type=\"text\" name=\"sellerFirstName\"/>\r\n                </label></div>\r\n\r\n                <button type={\"submit\"}>Envoyer</button>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n//-----------CONTAINER-------------------\r\n\r\nconst mapDispatchToProps = {\r\n    fetchNewImmo,\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(NewImmo)\r\n\r\n","export class UploadAdaptator {\r\n\r\n  constructor(private loader) {\r\n    this.loader = loader\r\n  }\r\n\r\n  upload() {\r\n    return this.loader.file\r\n      .then( file => new Promise( ( resolve, reject ) => {\r\n        let myReader= new FileReader();\r\n        myReader.onloadend = (e) => {\r\n          resolve({ default: myReader.result });\r\n        }\r\n        myReader.readAsDataURL(file);\r\n      } ) );\r\n  };\r\n\r\n  abort(){\r\n    console.log(\"L'uplaod a ete annulee\")\r\n  }\r\n\r\n}\r\n","export class FileTransform {\r\n\r\n    urlToBase64(imageUrl: string) : Promise<string> {\r\n        return fetch(imageUrl)\r\n            .then(res => res.blob()\r\n                .then(blob => this.blobToBase64(blob))\r\n            )\r\n    }\r\n\r\n    urlToBlob(imageUrl: string) : Promise<Blob> {\r\n        return fetch(imageUrl)\r\n            .then(res => res.blob())\r\n            .then(blob => blob)\r\n    }\r\n\r\n\r\n\r\n    base64ToFile(dataurl, filename) : File {\r\n\r\n        let arr = dataurl.split(','),\r\n            mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]),\r\n            n = bstr.length,\r\n            u8arr = new Uint8Array(n);\r\n        while (n--) {\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new File([u8arr], filename, {type: mime});\r\n    }\r\n\r\n\r\n    blobToBase64(file) : Promise<any>{\r\n        return new Promise((resolve, reject) => {\r\n            let reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => {\r\n                resolve(reader.result)\r\n            }\r\n            reader.onerror = (error) => {\r\n                reject(error)\r\n            };\r\n        })\r\n    }\r\n\r\n}\r\n","import React, {Component} from 'react';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport {UploadAdaptator} from \"./UploadAdaptator\";\r\nimport {FileTransform} from \"../../../middlewares/functions/fileTransform\";\r\nimport {connect} from \"react-redux\";\r\nimport {fetchNewArticle} from \"../../../actions/actions-admin-immo\";\r\n\r\ntype props = {\r\n    fetchNewArticle(formData : FormData) : void\r\n}\r\n\r\nclass NewArticle extends Component <props,any> {\r\n\r\n    refForm : any\r\n    listCategorie = ['autre','achat','vente','location','confiance']\r\n    div = document.createElement('div');\r\n    fileTransform : FileTransform = new FileTransform()\r\n\r\n    constructor(props : any) {\r\n        super(props);\r\n        this.refForm = React.createRef()\r\n    }\r\n\r\n\r\n\r\n    handleChange = (editor) => {\r\n        this.div.innerHTML = editor.getData()\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        let elems = this.refForm.current.elements\r\n        let formData = new FormData()\r\n        for(let elem of elems) {\r\n            switch (elem.type){\r\n                case 'file' :\r\n                    formData.append('img',elem.files[0])\r\n                    break\r\n                case 'checkbox' :\r\n                    formData.append(elem.name,elem.checked)\r\n                    break\r\n                default :\r\n                    formData.append(elem.name,elem.value)\r\n                    break\r\n            }\r\n        }\r\n        let imgs = this.div.querySelectorAll(\"img\")\r\n        if(imgs.length){\r\n            imgs.forEach((elem,index) => {\r\n                let base64 =  elem.getAttribute('src')\r\n                let file = this.fileTransform.base64ToFile(base64,'images' + index)\r\n                formData.append('imgs', file) })\r\n        }\r\n        formData.append('contenu',this.div.innerHTML)\r\n        this.props.fetchNewArticle(formData)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form ref={this.refForm} >\r\n                    <div>\r\n                        <label> Banniere <input type=\"file\" name={\"img\"}/></label>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label>Titre<input type=\"text\" name={\"titre\"}/></label>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label>Sous titre<input type=\"text\" name={\"sousTitre\"}/></label>\r\n                    </div>\r\n\r\n                    <div>Categorie\r\n                        <select name=\"categorie\">\r\n                            {this.listCategorie.map((elem,index)=>(\r\n                                <option key={index} value={elem}>{elem}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label>En ligne <input type=\"checkbox\" name={\"online\"}/></label>\r\n                    </div>\r\n                </form>\r\n\r\n                <h2>Rediger un article</h2>\r\n                <CKEditor editor={ ClassicEditor }\r\n                          onInit={ editor => {\r\n                              editor.plugins.get('FileRepository').createUploadAdapter =  (loader) => {\r\n                                    return new UploadAdaptator(loader) }\r\n                          }}\r\n                          onChange={(e,editor)=> this.handleChange(editor)}\r\n                />\r\n\r\n                <button onClick={this.handleSubmit}>Envoyer</button>\r\n            </div>\r\n\r\n    );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    fetchNewArticle\r\n}\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(NewArticle)\r\n\r\n\r\n\r\n","import React, {FunctionComponent, useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {fetchAllArticles, resetInAdmin} from \"../../../actions/actions-admin-immo\";\r\nimport {Article} from \"../../../models/article\";\r\n\r\n\r\ntype state = {\r\n    articles : [Article],\r\n    resetInAdmin(resetThis : string | Array<string>) : void,\r\n    fetchAllArticles() : void\r\n}\r\nconst AllArticles :FunctionComponent<state> = ({articles,resetInAdmin,fetchAllArticles})=>{\r\n\r\n    useEffect(()=>{\r\n        fetchAllArticles()\r\n\r\n        return ()=> resetInAdmin('articles')\r\n    },[]) // eslint-disable-line\r\n\r\n    return(\r\n        <section>\r\n            {articles &&\r\n            <table>\r\n                <thead>\r\n                <tr>\r\n                    <th>Reference</th>\r\n                    <th>Titre</th>\r\n                    <th>Categorie</th>\r\n                    <th>Date de publication</th>\r\n                    <th>Status</th>\r\n                    <th>Actions</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {articles.map((article,index)=>(\r\n                    <tr key={index}>\r\n                        <td>{article.reference}</td>\r\n                        <td>{article.titre}</td>\r\n                        <td>{article.categorie}</td>\r\n                        <td>{article.date}</td>\r\n                        {article.online && <td style={{color : 'green'}}>En ligne</td>}\r\n                        {!article.online && <td style={{color : 'red'}}>Hors ligne</td>}\r\n                        <td><button>voir</button><button>Modif</button><button>Supp</button></td>\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </table>\r\n            }\r\n\r\n        </section>\r\n    )\r\n}\r\n\r\n\r\n//-----------CONTAINER-------------------\r\n\r\nconst mapStateToProps = state => ({\r\n    articles :state.admin.articles,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    fetchAllArticles,\r\n    resetInAdmin\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AllArticles)\r\n\r\n","import React from 'react';\r\nimport css from './admin-pannel.module.css'\r\nimport {Link, Route,Switch} from 'react-router-dom'\r\nimport NewImmo from \"../new-immo/New-immo\";\r\nimport NewArticle from \"../new-article/NewArticle\";\r\nimport AllArticles from \"../allArticles/AllArticles\";\r\n\r\nconst AdminPannel = ()=> {\r\n    let url  ='/admin'\r\n    return (\r\n        <>\r\n            <header className={css.menuAdmin} >\r\n                <h3>Admin</h3>\r\n                <Link to='/'><button>Retour</button></Link>\r\n\r\n\r\n                <ul className={css.ulAdmin}>\r\n                    <h4>Ajouter :</h4>\r\n                    <li><Link to='/admin/immo/new'><button>immo</button></Link></li>\r\n                    <li><Link to='/admin/article/new'><button>Articles</button></Link></li>\r\n                </ul>\r\n\r\n                <ul className={css.ulAdmin}>\r\n                    <h4>Voir tous :</h4>\r\n                    <li><Link to='/admin/immo/all'><button>immo</button></Link></li>\r\n                    <li><Link to='/admin/article/all'><button>Articles</button></Link></li>\r\n                    <li><Link to='/admin/users/all'><button>utilisateurs</button></Link></li>\r\n                </ul>\r\n\r\n\r\n\r\n                <ul className={css.ulAdmin}>\r\n                    <h4>Modifier :</h4>\r\n                    <li><Link to='/aPropos'><button>Agence</button></Link></li>\r\n                </ul>\r\n            </header>\r\n\r\n            <Switch>\r\n                <Route path={`${url}/immo`} render={({ match: { url } }) => (\r\n                    <>\r\n                        <Route path={`${url}/new`} component={NewImmo} />\r\n                        <Route path={`${url}/all`} component={NewImmo} />\r\n                        <Route path={`${url}/update/:id`} component={NewImmo} />\r\n                    </>\r\n                )}\r\n                />\r\n                <Route path={`${url}/article`} render={({ match: { url } }) => (\r\n                    <>\r\n                        <Route path={`${url}/new`} component={NewArticle} />\r\n                        <Route path={`${url}/all`} component={AllArticles} />\r\n                        <Route path={`${url}/update/:id`} component={NewArticle} />\r\n                    </>\r\n                )}\r\n                />\r\n                <Route path={`${url}/users`} render={({ match: { url } }) => (\r\n                    <>\r\n                        <Route path={`${url}/new`} component={NewArticle} />\r\n                        <Route path={`${url}/all`} component={NewArticle} />\r\n                        <Route path={`${url}/update/:id`} component={NewArticle} />\r\n                    </>\r\n                )}\r\n                />\r\n            </Switch>\r\n\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default AdminPannel;\r\n"],"sourceRoot":""}