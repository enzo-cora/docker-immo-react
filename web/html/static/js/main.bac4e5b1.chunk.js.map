{"version":3,"sources":["components/front-pages/pages/details-immo/detailsImmos.module.css","components/front-pages/structure/header/header.module.css","actions/actions-admin-immo.ts","components/front-pages/structure/showImmos/showImmos.module.css","components/front-pages/modules/filtrator2000/filtrator2000.module.css","constants/constants-admin.ts","serviceWorker.ts","reducers/immos-reducer.ts","reducers/page-reducer.ts","reducers/admin-reducer.ts","middlewares/functions/getDataToken.ts","reducers/auth-reducer.ts","reducers/root-reducer.ts","constants/constants-immo.ts","constants/constants-page.ts","constants/constants-auth.ts","actions/actions-immos.ts","middlewares/functions/makeHeaderToken.ts","middlewares/epics/epic-immo.ts","actions/actions-auth.ts","middlewares/epics/epic-auth.ts","middlewares/epics/epic-article.ts","middlewares/epics/epics-root.ts","components/front-pages/pages/accueil/Accueil.tsx","selectors/immos-selector.ts","components/front-pages/modules/filtrator2000/Filtrator2000.tsx","actions/actions-pages.ts","components/front-pages/structure/showImmos/ShowImmo.tsx","components/front-pages/pages/acheter/Acheter.tsx","components/front-pages/pages/louer/Louer.tsx","components/front-pages/pages/about-us/About-us.tsx","components/front-pages/pages/articles/Articles.tsx","components/front-pages/pages/details-immo/Details-immo.tsx","components/front-pages/structure/header/Header.tsx","components/front-pages/structure/footer/Footer.tsx","components/front-pages/pages/articles/item-article/Item-article.tsx","components/error404.tsx","components/front-pages/auth/login/Login.tsx","components/front-pages/auth/register/Register.tsx","components/front-pages/auth/profile/Profile.tsx","components/front-pages/modules/pop-up-contact/Pop-up-contact.tsx","components/front-pages/auth/guardRoute/GuardRoute.tsx","selectors/auth-selector.ts","Router.tsx","index.tsx"],"names":["module","exports","fetchNewImmo","data","type","ADMIN_POST_NEW_IMMO","payload","link","fetchNewImmoSuccess","resp","ADMIN_POST_NEW_IMMO_SUCCESS","fetchNewArticle","ADMIN_POST_NEW_ARTICLE","fetchNewArticleSuccess","ADMIN_POST_NEW_ARTICLE_SUCCESS","fetchAllArticles","ADMIN_GET_ALL_ARTICLE","fetchAllArticlesSuccess","articles","ADMIN_GET_ALL_ARTICLE_SUCCESS","resetInAdmin","resetThis","RESET_IN_ADMIN","Boolean","window","location","hostname","match","reset","pagination","offset","perPage","currentPage","dataToken","token","localStorage","getItem","decodedToken","jwt_decode","Date","now","removeItem","Error","isAuth","fetchError","error","appReducer","combineReducers","immobilier","state","action","immos","details","Array","isArray","forEach","elem","undefined","page","filters","scrollElement","comeFrom","admin","respSuccess","auth","setItem","user","_id","isAdmin","clear","unverifiedToken","rootReducer","console","log","resetInImmo","headerToken","headers","protocol","linkAdmin","resetInAuth","rootEpic","combineEpics","action$","pipe","ofType","mergeMap","ajax","getJSON","map","fetchAllImmosSuccess","takeUntil","retry","catchError","of","state$","value","post","req","response","immo","fetchOneByIdSuccess","url","Accueil","className","selectimmos","getTotal","createSelector","length","getSliceImmos","slice","getPageCount","total","Math","ceil","mapDispatchToProps","saveFilters","fetchByFilters","connect","status","useEffect","formRef","useRef","handleChange","form","current","getSelectedValues","result","options","opt","selected","test","push","elements","name","surface","price","tagName","ref","css","flexRow","onChange","region","placeholder","city","id","postal_code","multiple","index","key","min","living_room","kitchen","bedroom","bathroom","savePagination","saveScrollElement","offSetTop","resetInPage","scroll","pageCount","rest","history","useHistory","useLocation","scrollTo","top","left","behavior","unlisten","listen","newLocation","regex","RegExp","newPath","pathname","selectedPage","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","e","containerClassName","activeClassName","forcePage","section","onClick","event","target","offsetTop","handleDetailsClick","reference","aside","toUpperCase","title","description","div","rooms","garage","terrace","address","street","longitude","latitude","Louer","AboutUs","Articles","fetchOneById","saveComeFrom","useParams","banner","React","createRef","handleMiniasClick","src","setAttribute","row","banniere","miniatures","alt","photos","goBack","style","height","toLocaleString","authLogout","menuHeader","Link","to","ulHeader","Footer","background","color","textAlign","ItemArticle","Error404","fetchLogin","onSubmit","preventDefault","elems","fetchRegister","checked","required","Profile","PopUpContact","GuardRoute","component","guard","render","props","createElement","getIsAdmin","AdminPannel","lazy","message","success","path","fallback","exact","from","Login","Register","Acheter","DetailsImmo","epicMiddleware","createEpicMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.bac4e5b1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"detailsImmos_row__2bgQV\",\"miniatures\":\"detailsImmos_miniatures__2yGR4\",\"banner\":\"detailsImmos_banner__1K-zZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuHeader\":\"header_menuHeader__2Eoeg\",\"ulHeader\":\"header_ulHeader__3mdoN\",\"mesParagraphe\":\"header_mesParagraphe__3LK4m\"};","import {\r\n    ADMIN_POST_NEW_IMMO,\r\n    ADMIN_POST_NEW_IMMO_SUCCESS,\r\n    RESET_IN_ADMIN,\r\n    ADMIN_POST_NEW_ARTICLE, ADMIN_POST_NEW_ARTICLE_SUCCESS, ADMIN_GET_ALL_ARTICLE, ADMIN_GET_ALL_ARTICLE_SUCCESS\r\n} from \"../constants/constants-admin\";\r\nimport {Article} from \"../models/article\";\r\n\r\n//Admin Post new Logement\r\nexport const fetchNewImmo = (data) => ({\r\n    type : ADMIN_POST_NEW_IMMO,\r\n    payload : {link : '/newImmo',data}\r\n})\r\nexport const fetchNewImmoSuccess = (resp) => ({\r\n    type : ADMIN_POST_NEW_IMMO_SUCCESS,\r\n    payload : resp\r\n})\r\n\r\n//Admin Post new Article\r\nexport const fetchNewArticle = (data) => ({\r\n    type : ADMIN_POST_NEW_ARTICLE,\r\n    payload : {link : '/publish',data}\r\n})\r\nexport const fetchNewArticleSuccess = (resp) => ({\r\n    type : ADMIN_POST_NEW_ARTICLE_SUCCESS,\r\n    payload : resp\r\n})\r\n\r\n//Admin get All Articles\r\nexport const fetchAllArticles = () => ({\r\n    type : ADMIN_GET_ALL_ARTICLE,\r\n    payload : {link : '/getAll'}\r\n})\r\nexport const fetchAllArticlesSuccess = (articles : Article) => ({\r\n    type : ADMIN_GET_ALL_ARTICLE_SUCCESS,\r\n    payload : articles\r\n})\r\n//----------------RESET THIS IN ADMIN---------------------\r\nexport const resetInAdmin = (resetThis) => ({\r\n    type : RESET_IN_ADMIN,\r\n    payload : resetThis\r\n})\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"showImmos_section__cBz41\",\"aside\":\"showImmos_aside__12V8M\",\"div\":\"showImmos_div__EsWLQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flexRow\":\"filtrator2000_flexRow__1chPZ\"};","//reset in admin reducer\r\nexport const RESET_IN_ADMIN = 'RESET_IN_ADMIN' ;\r\n\r\n//post new immo\r\nexport const ADMIN_POST_NEW_IMMO = 'IMMO_POST_NEW' ;\r\nexport const ADMIN_POST_NEW_IMMO_SUCCESS = 'IMMO_POST_NEW_SUCCESS' ;\r\n\r\n//post new article\r\nexport const ADMIN_POST_NEW_ARTICLE = 'ADMIN_POST_NEW_ARTICLE' ;\r\nexport const ADMIN_POST_NEW_ARTICLE_SUCCESS = 'ADMIN_POST_NEW_ARTICLE_SUCCESS' ;\r\n\r\n//get all articles\r\nexport const ADMIN_GET_ALL_ARTICLE = 'ADMIN_GET_ALL_ARTICLE' ;\r\nexport const ADMIN_GET_ALL_ARTICLE_SUCCESS = 'ADMIN_ARTICLE_GET_ALL_SUCCESS' ;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n    IMMO_GET_ALL_SUCCESS,\r\n    IMMO_GET_BY_FILTERS_SUCCESS,\r\n    IMMO_GET_ONE_SUCCESS,\r\n    RESET_IN_IMMO,\r\n} from \"../constants/constants-immo\";\r\n\r\nconst reset = {}\r\n\r\nexport const immosReducer = (state = reset, action) => {\r\n    switch (action.type) {\r\n        //Get All\r\n        case IMMO_GET_ALL_SUCCESS:\r\n            return {...state, immos : action.payload}\r\n        //Get sommes by filters\r\n        case IMMO_GET_BY_FILTERS_SUCCESS:\r\n            return {...state, immos : action.payload}\r\n        //get one by id\r\n        case IMMO_GET_ONE_SUCCESS:\r\n            return {...state, details : action.payload}\r\n\r\n\r\n        //make reset in Immobilier\r\n        case RESET_IN_IMMO:\r\n            if(Array.isArray(action.payload)){\r\n                action.payload.forEach(elem =>{\r\n                    state = {...state, [elem] : undefined}\r\n                })\r\n                return state\r\n            }\r\n            else if(action.payload === '*'){\r\n                return reset\r\n            }\r\n            else{\r\n                return {...state, [action.payload] : undefined}\r\n            }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\n","import {\r\n    RESET_IN_PAGE,\r\n    SAVE_ELEMENT_SCROLL_POSITION,\r\n    SAVE_FILTERS,\r\n    SAVE_COME_FROM,\r\n    SAVE_PAGINATION\r\n} from \"../constants/constants-page\";\r\n\r\n//Quand le state vaut undefined\r\nconst reset = {pagination : {offset: 0, perPage: 10, currentPage: 0}}\r\n\r\nexport const pageReducer = (state:any = reset, action) => {\r\n    switch (action.type) {\r\n        //Save Filters\r\n        case SAVE_FILTERS:\r\n            return {...state, filters : action.payload}\r\n        //Sabe Pages infos\r\n        case SAVE_PAGINATION:\r\n            return {...state, pagination : {...state.pagination,...action.payload}}\r\n        case SAVE_ELEMENT_SCROLL_POSITION:\r\n            return {...state, scrollElement : action.payload}\r\n        case SAVE_COME_FROM:\r\n            return {...state, comeFrom : action.payload}\r\n        case RESET_IN_PAGE:\r\n            if(Array.isArray(action.payload)){\r\n                action.payload.forEach(elem =>{\r\n                    state = {...state, [elem] : undefined}\r\n                })\r\n                return state\r\n            }\r\n            else if(action.payload === '*'){\r\n                return reset\r\n            }\r\n            else{\r\n                return {...state, [action.payload] : undefined}\r\n            }\r\n\r\n        default :\r\n            return state\r\n    }\r\n}\r\n","import {\r\n    ADMIN_GET_ALL_ARTICLE_SUCCESS,\r\n    ADMIN_POST_NEW_ARTICLE_SUCCESS,\r\n    ADMIN_POST_NEW_IMMO_SUCCESS,\r\n    RESET_IN_ADMIN\r\n} from \"../constants/constants-admin\";\r\n\r\n\r\nconst reset = {}\r\n\r\nexport const adminReducer = (state = reset, action) => {\r\n    switch (action.type) {\r\n        //add new immo\r\n        case ADMIN_POST_NEW_IMMO_SUCCESS :\r\n            return {...state, respSuccess : action.payload}\r\n\r\n        //get all articles\r\n        case ADMIN_GET_ALL_ARTICLE_SUCCESS :\r\n            return {...state, articles : action.payload}\r\n\r\n        //post new article\r\n        case ADMIN_POST_NEW_ARTICLE_SUCCESS :\r\n            return {...state, respSuccess : action.payload}\r\n\r\n\r\n\r\n        //reset field(s) in admin\r\n        case RESET_IN_ADMIN:\r\n            if(Array.isArray(action.payload)){\r\n                action.payload.forEach(elem =>{\r\n                    state = {...state, [elem] : undefined}\r\n                })\r\n                return state\r\n            }\r\n            else if(action.payload === '*'){\r\n                return reset\r\n            }\r\n            else{\r\n                return {...state, [action.payload] : undefined}\r\n            }\r\n        default :\r\n            return {...state,respSuccess: undefined}\r\n    }\r\n}\r\n\r\n","import jwt_decode from 'jwt-decode'\r\n\r\nexport const dataToken = (token = localStorage.getItem('Authorization') ) : Object | false => {\r\n\r\n    if(token){\r\n        try{\r\n            let decodedToken : any =  jwt_decode(token)\r\n            if(decodedToken['comeFrom'] !== 'immobilierApp' ) {\r\n                return false\r\n            }else if (decodedToken['exp'] > Date.now() ){\r\n                localStorage.removeItem('Authorization')\r\n                return false\r\n            }else{\r\n                return decodedToken\r\n            }\r\n        }\r\n        catch(Error){\r\n            return false\r\n        }\r\n    }else{\r\n        return false\r\n    }\r\n\r\n}\r\n","import {AUTH_LOGIN_SUCCESS, AUTH_LOGOUT, AUTH_REGISTER_SUCCESS, RESET_IN_AUTH} from \"../constants/constants-auth\";\r\nimport {dataToken} from \"../middlewares/functions/getDataToken\";\r\n\r\nconst reset = {isAuth : false}\r\n\r\nexport const authReducer = (state = reset, action) => {\r\n    switch (action.type) {\r\n        //Login\r\n        case AUTH_LOGIN_SUCCESS :\r\n            localStorage.setItem('Authorization','Bearer ' + action.payload.token);\r\n            const {_id,isAdmin} = action.payload.user\r\n            return {user : {_id,isAdmin}, isAuth : true}\r\n\r\n        //Register\r\n        case AUTH_REGISTER_SUCCESS :\r\n            return {...state,respSuccess : action.payload}\r\n\r\n        //Logout\r\n        case AUTH_LOGOUT :\r\n            localStorage.clear();\r\n            return reset\r\n\r\n        //Reset in Auth\r\n        case RESET_IN_AUTH:\r\n            if(Array.isArray(action.payload)){\r\n                action.payload.forEach(elem =>{\r\n                    state = {...state, [elem] : undefined}\r\n                })\r\n                return state\r\n            }\r\n            else if(action.payload === '*'){\r\n                return reset\r\n            }\r\n            else{\r\n                return {...state, [action.payload] : undefined}\r\n            }\r\n\r\n        default :\r\n            if(state.isAuth){\r\n                return state\r\n            }\r\n            let unverifiedToken = localStorage.getItem('Authorization')\r\n            if(unverifiedToken){\r\n                let token = dataToken(unverifiedToken)\r\n                if(token){\r\n                    return {...state, isAuth : true, user : {isAdmin : token['isAdmin'], _id : token['userId']}}\r\n                }\r\n                else{\r\n                    return reset\r\n                }\r\n            }\r\n            return reset\r\n    }\r\n}\r\n\r\n","import {combineReducers} from \"redux\";\r\nimport {immosReducer} from \"./immos-reducer\";\r\nimport {pageReducer} from \"./page-reducer\";\r\nimport {adminReducer} from \"./admin-reducer\";\r\nimport {authReducer} from \"./auth-reducer\";\r\n\r\n//------------ERROR HANDLER--------------------\r\n/*Constante*/export const SHOW_ERROR = 'SHOW_ERROR'\r\n\r\n/*Action Creator*/export const fetchError = (error) => ({\r\n    type : SHOW_ERROR,\r\n    payload : error\r\n})\r\n/*ErrorReducer*/const errorReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case SHOW_ERROR:\r\n            return action.payload\r\n        default :\r\n            return {}\r\n    }\r\n}\r\n\r\n//--------------ROOT Reducer ---------------------\r\nconst appReducer = combineReducers({\r\n    immobilier : immosReducer,\r\n    page : pageReducer,\r\n    admin : adminReducer,\r\n    error : errorReducer,\r\n    auth : authReducer\r\n})\r\n\r\nconst rootReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case SHOW_ERROR:\r\n            console.log(\"Voici l'erreur : \",action.payload)\r\n            break\r\n\r\n    }\r\n    return appReducer(state, action);\r\n};\r\nexport default rootReducer\r\n\r\n","\r\n/*-----------------Immobilier---------------------*/\r\n\r\n//get all immo\r\nexport const IMMO_GET_ALL = 'IMMO_GET_ALL' ;\r\nexport const IMMO_GET_ALL_SUCCESS = 'IMMO_GET_ALL_SUCCESS' ;\r\n\r\n//get somes by filters\r\nexport const IMMO_GET_BY_FILTERS = 'IMMO_GET_BY_FILTERS' ;\r\nexport const IMMO_GET_BY_FILTERS_SUCCESS = 'IMMO_GET_BY_FILTERS_SUCCESS' ;\r\n\r\n//get one by id\r\nexport const IMMO_GET_ONE = 'IMMO_GET_ONE' ;\r\nexport const IMMO_GET_ONE_SUCCESS = 'IMMO_GET_ONE_SUCCESS' ;\r\n\r\n//reset somethinh in immo :\r\nexport const RESET_IN_IMMO = 'RESET_IN_IMMO'\r\n\r\n/*\r\nexport const IMMO_POST_NUMBER_RESULTS = 'IMMO_POST_NUMBER_RESULTS' ;\r\nexport const IMMO_POST_NUMBER_RESULTS_SUCCESS = 'IMMO_POST_NUMBER_RESULTS_SUCCESS' ;\r\nexport const IMMO_POST_NUMBER_RESULTS_ERROR = 'IMMO_POST_NUMBER_RESULTS_ERROR' ;\r\n\r\nexport const IMMO_GET_LAST = 'IMMO_GET_LAST' ;\r\nexport const IMMO_GET_LAST_SUCCESS = 'IMMO_GET_LAST_SUCCESS' ;\r\nexport const IMMO_GET_LAST_ERROR = 'IMMO_GET_LAST_ERROR' ;\r\n\r\nexport const IMMO_POST_DISTINCT = 'IMMO_POST_DISTINCT'\r\nexport const IMMO_POST_DISTINCT_SUCCESS = 'IMMO_POST_DISTINCT_SUCCESS'\r\nexport const IMMO_POST_DISTINCT_ERROR = 'IMMO_POST_DISTINCT_ERROR'\r\n\r\n*/\r\n","//SAVE FILTERS\r\nexport const SAVE_FILTERS = 'SAVE_FILTERS'\r\n\r\n//SAVE PAGE INFO\r\nexport const SAVE_PAGINATION = 'SAVE_PAGINATION'\r\n\r\n//SAVE ELEMENT SCROLL POSITION\r\nexport const SAVE_ELEMENT_SCROLL_POSITION = 'SAVE_ELEMENT_SCROLL_POSITION'\r\n\r\n//SAVE PAGE FROM\r\nexport const SAVE_COME_FROM = 'SAVE_COME_FROM'\r\n\r\n//reset something in page\r\nexport const RESET_IN_PAGE = 'RESET_IN_PAGE'\r\n","//Login\r\nexport const AUTH_LOGIN = 'AUTH_LOGIN' ;\r\nexport const AUTH_LOGIN_SUCCESS = 'AUTH_LOGIN_SUCCESS' ;\r\n\r\n//Register\r\nexport const AUTH_REGISTER = 'AUTH_REGISTER' ;\r\nexport const AUTH_REGISTER_SUCCESS = 'AUTH_REGISTER_SUCCESS'\r\n\r\n///Logout\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT' ;\r\n\r\n/*///Get\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT' ;*/\r\n\r\n//Reset in auth\r\nexport const RESET_IN_AUTH = 'RESET_IN_AUTH' ;\r\n","import '../constants/constants-immo'\r\nimport {\r\n    IMMO_GET_ALL,\r\n    IMMO_GET_ALL_SUCCESS,\r\n    IMMO_GET_BY_FILTERS,\r\n    IMMO_GET_BY_FILTERS_SUCCESS,\r\n    IMMO_GET_ONE,\r\n    IMMO_GET_ONE_SUCCESS, RESET_IN_IMMO,\r\n} from \"../constants/constants-immo\";\r\nimport {Immobilier} from \"../models/immobilier\";\r\n\r\n//-------------------GET ALL IMMO-------------------\r\nexport const fetchAllImmos = () => ({\r\n    type : IMMO_GET_ALL,\r\n    payload : {link : '/'}\r\n})\r\nexport const fetchAllImmosSuccess = (immos : Immobilier) => ({\r\n    type : IMMO_GET_ALL_SUCCESS,\r\n    payload : immos\r\n})\r\n//------------------GET SOMES BY FILTERS-------------------\r\nexport const fetchByFilters = () => ({\r\n    type : IMMO_GET_BY_FILTERS,\r\n    payload : {link : '/filter'}\r\n})\r\nexport const fetchByFiltersSuccess = (immos : Immobilier) => ({\r\n    type : IMMO_GET_BY_FILTERS_SUCCESS,\r\n    payload : immos\r\n})\r\n\r\n//----------------GET ONE BY ID---------------------\r\nexport const fetchOneById = (id) => ({\r\n    type : IMMO_GET_ONE,\r\n    payload : {link : `/findOne/${id}`}\r\n})\r\nexport const fetchOneByIdSuccess = (immo) => ({\r\n    type : IMMO_GET_ONE_SUCCESS,\r\n    payload : immo\r\n})\r\n//----------------RESET THIS---------------------\r\nexport const resetInImmo = (resetThis) => ({\r\n    type : RESET_IN_IMMO,\r\n    payload : resetThis\r\n})\r\n","\r\n\r\n//Make header 'Authorization' if there are token\r\nexport const headerToken = (headers? : Object) => {\r\n    let token = localStorage.getItem('Authorization')\r\n    if(token){\r\n        return  {'Authorization' : token,...headers}\r\n    }\r\n    else {\r\n        return {}\r\n    }\r\n}\r\n","import {IMMO_GET_ALL, IMMO_GET_BY_FILTERS, IMMO_GET_ONE} from \"../../constants/constants-immo\";\r\nimport {ajax} from \"rxjs/ajax\";\r\nimport {of} from \"rxjs\";\r\nimport {fetchAllImmosSuccess,    fetchByFiltersSuccess, fetchOneByIdSuccess\r\n} from \"../../actions/actions-immos\";\r\nimport {catchError, map, mergeMap, retry, takeUntil} from \"rxjs/operators\";\r\nimport {ofType} from \"redux-observable\";\r\nimport {ADMIN_POST_NEW_IMMO} from \"../../constants/constants-admin\";\r\nimport {fetchNewImmoSuccess} from \"../../actions/actions-admin-immo\";\r\nimport {fetchError} from \"../../reducers/root-reducer\";\r\nimport {headerToken} from \"../functions/makeHeaderToken\";\r\n\r\nlet link = window.location.protocol +'//'+ window.location.hostname + '/api1/immobilier'\r\nlet linkAdmin = window.location.protocol +'//'+ window.location.hostname + '/api1/admin/immo'\r\n\r\nexport const epic_getAllImmos = action$ => (\r\n    action$.pipe(\r\n        ofType(IMMO_GET_ALL),\r\n        mergeMap( (action:any) => ajax.getJSON(link + action.payload.link)\r\n            .pipe(\r\n                map((immos:any) => fetchAllImmosSuccess(immos) ),\r\n                takeUntil(action$.ofType(IMMO_GET_ALL)),\r\n                retry(2),\r\n                catchError(error => {\r\n                    console.log(error)\r\n                    return  of(fetchError(error) )\r\n                } )\r\n            )\r\n        )\r\n    )\r\n)\r\n\r\n\r\n\r\nexport const epic_getImmosByFilter = (action$,state$) => (\r\n    action$.pipe(\r\n        ofType(IMMO_GET_BY_FILTERS),\r\n        mergeMap( (action:any) => {\r\n            let filters = state$.value.page.filters\r\n            let headers = { 'Content-Type': 'application/json' }\r\n               return ajax.post(link + action.payload.link, filters,headerToken(headers))\r\n                    .pipe(\r\n                        map( (req:any) => fetchByFiltersSuccess(req.response)),\r\n                        takeUntil(action$.ofType(IMMO_GET_BY_FILTERS)),\r\n                        retry(2),\r\n                        catchError(error => {\r\n                            console.log(error)\r\n                            return of(fetchError(error))\r\n                        })\r\n            ) }\r\n        )\r\n    )\r\n)\r\n\r\nexport const epic_getOneById = (action$) => (\r\n    action$.pipe(\r\n        ofType(IMMO_GET_ONE),\r\n        mergeMap( (action:any) => ajax.getJSON(link + action.payload.link)\r\n            .pipe(\r\n                map((immo:any) => fetchOneByIdSuccess(immo) ),\r\n                takeUntil(action$.ofType(IMMO_GET_ONE)),\r\n                retry(2),\r\n                catchError(error => {\r\n                    console.log(error)\r\n                    return  of(fetchError(error) )\r\n                } )\r\n            )\r\n        )\r\n    )\r\n)\r\n\r\n//----------------------------ADMIN ----------------------------------------------\r\n\r\nexport const epic_postNewImmo = (action$) => (\r\n    action$.pipe(\r\n        ofType(ADMIN_POST_NEW_IMMO),\r\n        mergeMap( (action:any) => {\r\n            let url = action.payload.link\r\n            let data = action.payload.data\r\n            return ajax.post(linkAdmin + url, data, headerToken())\r\n                .pipe(\r\n                    map( (req:any) => fetchNewImmoSuccess(req.response)),\r\n                    takeUntil(action$.ofType(ADMIN_POST_NEW_IMMO)),\r\n                    retry(2),\r\n                    catchError(error => {\r\n                        console.log(error)\r\n                        return of(fetchError(error))\r\n                    })\r\n                ) }\r\n        )\r\n    )\r\n)\r\n\r\n","import {\r\n    AUTH_LOGIN,\r\n    AUTH_LOGIN_SUCCESS,\r\n    AUTH_LOGOUT,\r\n    AUTH_REGISTER,\r\n    AUTH_REGISTER_SUCCESS,\r\n    RESET_IN_AUTH\r\n} from \"../constants/constants-auth\";\r\n\r\n//Login\r\nexport const fetchLogin = (data) => ({\r\n    type : AUTH_LOGIN,\r\n    payload : {data, link : '/login'}\r\n})\r\nexport const fetchLoginSuccess = (respData) => ({\r\n    type : AUTH_LOGIN_SUCCESS,\r\n    payload : respData\r\n})\r\n\r\n//Register\r\nexport const fetchRegister = (data) => ({\r\n    type : AUTH_REGISTER,\r\n    payload : {data, link : '/register'}\r\n})\r\nexport const fetchRegisterSuccess = (resp) => ({\r\n    type : AUTH_REGISTER_SUCCESS,\r\n    payload : resp\r\n})\r\n\r\n\r\n//logout\r\nexport const authLogout = () => ({\r\n    type : AUTH_LOGOUT,\r\n})\r\n\r\n//Reset un Auth\r\nexport const resetInAuth = (resetThis) => ({\r\n    type : RESET_IN_AUTH,\r\n    payload : resetThis\r\n})\r\n","import {ajax} from \"rxjs/ajax\";\r\nimport {of} from \"rxjs\";\r\nimport {catchError, map, mergeMap, retry, takeUntil} from \"rxjs/operators\";\r\nimport {ofType} from \"redux-observable\";\r\nimport {fetchError} from \"../../reducers/root-reducer\";\r\nimport {AUTH_LOGIN, AUTH_REGISTER} from \"../../constants/constants-auth\";\r\nimport {fetchLoginSuccess, fetchRegisterSuccess} from \"../../actions/actions-auth\";\r\n\r\nlet link = window.location.protocol +'//' + window.location.hostname + '/api1/authentification'\r\n// let linkAdmin = window.location.protocol +'//'+ window.location.hostname + '/api1/admin/immo'\r\n\r\nexport const epic_login = (action$) => (\r\n    action$.pipe(\r\n        ofType(AUTH_LOGIN),\r\n        mergeMap( (action:any) => {\r\n            let url = action.payload.link\r\n            let data = action.payload.data\r\n            let headers = { 'Content-Type': 'application/json' }\r\n            return ajax.post(link + url, data,headers)\r\n                .pipe(\r\n                    map( (req:any) => fetchLoginSuccess(req.response)),\r\n                    takeUntil(action$.ofType(AUTH_LOGIN)),\r\n                    catchError(error => {\r\n                            console.log(error)\r\n                            return of(fetchError(error))\r\n                    })\r\n                ) }\r\n        )\r\n    )\r\n)\r\n\r\nexport const epic_register = (action$) => (\r\n    action$.pipe(\r\n        ofType(AUTH_REGISTER),\r\n        mergeMap( (action:any) => {\r\n            let url = action.payload.link\r\n            let data = action.payload.data\r\n            let headers = { 'Content-Type': 'application/json' }\r\n            return ajax.post(link + url, data,headers)\r\n                .pipe(\r\n                    map( (req:any) => fetchRegisterSuccess(req.response)),\r\n                    takeUntil(action$.ofType(AUTH_REGISTER)),\r\n                    retry(2),\r\n                    catchError(error => {\r\n                        console.log(error)\r\n                        return of(fetchError(error))\r\n                    })\r\n                ) }\r\n        )\r\n    )\r\n)\r\n","\r\nimport {ajax} from \"rxjs/ajax\";\r\nimport {of} from \"rxjs\";\r\nimport {catchError, map, mergeMap, retry, takeUntil} from \"rxjs/operators\";\r\nimport {ofType} from \"redux-observable\";\r\nimport {ADMIN_GET_ALL_ARTICLE, ADMIN_POST_NEW_ARTICLE} from \"../../constants/constants-admin\";\r\nimport {fetchAllArticlesSuccess, fetchNewArticleSuccess} from \"../../actions/actions-admin-immo\";\r\nimport {fetchError} from \"../../reducers/root-reducer\";\r\nimport {headerToken} from \"../functions/makeHeaderToken\";\r\n\r\n// let link = window.location.protocol +'//'+ window.location.hostname + '/api1/articles'\r\nlet linkAdmin = window.location.protocol +'//'+ window.location.hostname + '/api1/admin/articles'\r\n\r\n/*\r\nexport const epic_getOneById = (action$) => (\r\n    action$.pipe(\r\n        ofType(IMMO_GET_ONE),\r\n        mergeMap( (action:any) => ajax.getJSON(link + action.payload.link)\r\n            .pipe(\r\n                map((immo:any) => fetchOneByIdSuccess(immo) ),\r\n                takeUntil(action$.ofType(IMMO_GET_ONE)),\r\n                retry(2),\r\n                catchError(error => {\r\n                    console.log(error)\r\n                    return  of(fetchError(error) )\r\n                } )\r\n            )\r\n        )\r\n    )\r\n)*/\r\n\r\n//----------------------------ADMIN ----------------------------------------------\r\n\r\nexport const epic_getAllArticles = (action$) => (\r\n    action$.pipe(\r\n        ofType(ADMIN_GET_ALL_ARTICLE),\r\n        mergeMap( (action:any) => ajax.getJSON(linkAdmin + action.payload.link,headerToken())\r\n            .pipe(\r\n                map((articles:any) => fetchAllArticlesSuccess(articles) ),\r\n                takeUntil(action$.ofType(ADMIN_GET_ALL_ARTICLE)),\r\n                retry(2),\r\n                catchError(error => {\r\n                    console.log(error)\r\n                    return  of(fetchError(error) )\r\n                } )\r\n            )\r\n        )\r\n    )\r\n)\r\n\r\n\r\nexport const epic_postNewArticle = (action$) => (\r\n    action$.pipe(\r\n        ofType(ADMIN_POST_NEW_ARTICLE),\r\n        mergeMap( (action:any) => {\r\n            let url = action.payload.link\r\n            let data = action.payload.data\r\n            return ajax.post(linkAdmin + url, data, headerToken())\r\n                .pipe(\r\n                    map( (req:any) => fetchNewArticleSuccess(req.response)),\r\n                    takeUntil(action$.ofType(ADMIN_POST_NEW_ARTICLE)),\r\n                    retry(2),\r\n                    catchError(error => {\r\n                        console.log(error)\r\n                        return of(fetchError(error))\r\n                    })\r\n                ) }\r\n        )\r\n    )\r\n)\r\n\r\n","import {combineEpics} from \"redux-observable\";\r\nimport {epic_getAllImmos, epic_getImmosByFilter, epic_getOneById, epic_postNewImmo} from \"./epic-immo\";\r\nimport {epic_login, epic_register} from \"./epic-auth\";\r\nimport {epic_getAllArticles, epic_postNewArticle} from \"./epic-article\";\r\n\r\nexport const rootEpic =  combineEpics(\r\n    epic_getAllImmos,\r\n    epic_getImmosByFilter,\r\n    epic_getOneById,\r\n    epic_postNewImmo,\r\n    epic_login,\r\n    epic_register,\r\n    epic_getAllArticles,\r\n    epic_postNewArticle,\r\n)\r\n","import React from 'react';\r\n\r\n\r\nconst Accueil  = ()=> {\r\n    return (\r\n        <div className=\"div\">\r\n          <p>Bienvenu sur l'acceuil</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Accueil;\r\n","import {createSelector} from \"reselect\";\r\n\r\nconst selectPagination = state => state.page.pagination\r\nconst selectimmos = (state) => state.immobilier.immos\r\nconst selectPerPage = state => state.page.pagination.perPage\r\n\r\nexport const getTotal = createSelector(\r\n    [selectimmos],\r\n    (immos) => immos ? immos.length : 0\r\n)\r\n\r\n\r\nexport const getSliceImmos = createSelector(\r\n    [selectPagination,selectimmos],\r\n    (pagination,immos) => {\r\n        if(pagination && immos ){\r\n            return immos.slice(pagination.offset, pagination.offset + pagination.perPage)\r\n        }\r\n        return null\r\n    }\r\n)\r\n\r\nexport const getPageCount = createSelector(\r\n    [getTotal,selectPerPage],\r\n    (total,perPage) => {\r\n        if(total && perPage ){\r\n            return Math.ceil(total / perPage)\r\n        }\r\n        return 1\r\n    }\r\n)\r\n","import React, {FunctionComponent, useEffect, useRef} from 'react';\r\nimport css from './filtrator2000.module.css'\r\nimport {connect} from \"react-redux\";\r\nimport {fetchByFilters} from \"../../../../actions/actions-immos\";\r\nimport {saveFilters} from \"../../../../actions/actions-pages\";\r\nimport {getTotal} from \"../../../../selectors/immos-selector\";\r\n\r\ntype state = {\r\n    saveFilters,\r\n    fetchByFilters,\r\n    status : string,\r\n    total : number,\r\n    filters : any\r\n}\r\n\r\nconst Filtrator2000 : FunctionComponent<state> = ({saveFilters,fetchByFilters,status,total, filters})=> {\r\n\r\n\r\n\r\n\r\n    useEffect(()=> {\r\n        if(filters?.status === status){\r\n            saveFilters({...filters,status : status})\r\n        }else{\r\n            saveFilters({status : status})\r\n        }\r\n        fetchByFilters()\r\n\r\n    },[])// eslint-disable-line\r\n\r\n    const typeData = ['Maison','Appartement','Local']\r\n    const bedroomsData = [1,2,3,4,5,6,7]\r\n    const bathroomsData = [1,2,3,4,5,6,7]\r\n    const living_roomData = [1,2,3,4]\r\n    const kitchenData = [1,2,3]\r\n\r\n    const formRef = useRef(null)\r\n\r\n    function handleChange () {\r\n\r\n        let form : any = formRef.current\r\n        let filters : any = {status : status}\r\n\r\n        function getSelectedValues(elem)  {\r\n            let result : Array<any> = []\r\n            let options = elem.options\r\n            for(let opt of options) {\r\n                if(opt.selected){\r\n                    /\\d+/.test(opt.value ) ? result.push(+opt.value) :\r\n                      result.push(opt.value)\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n\r\n        for (let elem of form.elements) {\r\n            if (elem.value && elem.value.length > 0) {\r\n                switch (elem.name) {\r\n                    case 'minSurface' :\r\n                        if (filters.surface === undefined)\r\n                            filters.surface = [0,0]\r\n                        filters.surface[0] = +elem.value\r\n                        break\r\n                    case 'maxSurface' :\r\n                        if (filters.surface === undefined)\r\n                            filters.surface = [0,0]\r\n                        filters.surface[1] = +elem.value\r\n                        break\r\n                    case 'minPrice' :\r\n                        if (filters.price === undefined)\r\n                            filters.price = [0,0]\r\n                        filters.price[0] = +elem.value\r\n                        break\r\n                    case 'maxPrice' :\r\n                        if (filters.price === undefined)\r\n                            filters.price = []\r\n                        filters.price[1] = +elem.value\r\n                        break;\r\n                    default:\r\n                        elem.tagName === 'SELECT' ?\r\n                          filters[elem.name] = getSelectedValues(elem) :\r\n                          filters[elem.name] = elem.value\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        console.log('les filtres',filters)\r\n        saveFilters(filters)\r\n        fetchByFilters()\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2>Vos filtres </h2>\r\n            <section >\r\n                <form ref={formRef}  >\r\n\r\n                    <div className={css.flexRow}>\r\n                        <aside>\r\n\r\n                            <div>\r\n                                <label> Regions\r\n                                    <input onChange={handleChange}  value={filters?.region || ''} placeholder=\"Ile-de-France\" name=\"region\" type=\"text\" />\r\n                                </label>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <label > Ville\r\n                                    <input onChange={handleChange} placeholder=\"Paris\" value={filters?.city || ''} name=\"city\" id=\"city\" type=\"text\"/>\r\n                                </label>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <label> Code Postal\r\n                                    <input onChange={handleChange} placeholder=\"75235 CEDEX 05\"  value={filters?.postal_code || ''} name=\"postal_code\" type=\"text\"/>\r\n                                </label>\r\n                            </div>\r\n\r\n                            <p>\r\n                                <select onChange={handleChange} name=\"type\" value={filters?.type || []} multiple >\r\n                                    {typeData.map((elem,index) => {\r\n                                        return <option key={index} value={elem}>{elem}</option>\r\n                                    })}\r\n                                </select>\r\n                            </p>\r\n\r\n                        </aside>\r\n\r\n                        <div>\r\n                            <p>\r\n                                <label>Prix\r\n                                    <input onChange={handleChange} type=\"number\" value={filters?.price && filters.price[0] ? filters.price[0] : ''} name=\"minPrice\" placeholder={'minimum'} min={'0'}/>\r\n                                    <input onChange={handleChange} type=\"number\" value={filters?.price && filters.price[1] ? filters.price[1] : ''} name=\"maxPrice\" placeholder={'maximum'} min={'0'}/>\r\n                                </label>\r\n                            </p>\r\n\r\n                            <p>\r\n                                <label>Surface\r\n                                    <input onChange={handleChange} type=\"number\" value={filters?.surface && filters.surface[0] ? filters.surface[0] : ''} name=\"minSurface\" placeholder={'minimum'} min={'0'}/>\r\n                                    <input onChange={handleChange} type=\"number\" value={filters?.surface && filters.surface[1] ? filters.surface[1] : ''} name=\"maxSurface\"  placeholder={'maximum'} min={'0'}/>\r\n                                </label>\r\n                            </p>\r\n\r\n                            <div className={css.flexRow}>\r\n\r\n                                <div>\r\n                                    <p>salon(s) :</p>\r\n                                    <select onChange={handleChange} name=\"living_room\" value={filters?.living_room || []} multiple >\r\n                                        {living_roomData.map((elem,index) => {\r\n                                            return <option key={index}  value={elem}>{elem}</option>\r\n                                        })}\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <p>cuisines(s) :</p>\r\n                                    <select onChange={handleChange} name=\"kitchen\" value={filters?.kitchen || []} multiple >\r\n                                        {kitchenData.map((elem,index) => {\r\n                                            return <option key={index}  value={elem}>{elem}</option>\r\n                                        })}\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <p>chambres(s) :</p>\r\n                                    <select onChange={handleChange} name=\"bedroom\" value={filters?.bedroom || []} multiple >\r\n                                        {bedroomsData.map((elem,index) => {\r\n                                            return <option key={index}  value={elem}>{elem}</option>\r\n                                        })}\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <p>Salle(s) de bains :</p>\r\n                                    <select onChange={handleChange} name=\"bathroom\" value={filters?.bathroom || []} multiple >\r\n                                        {bathroomsData.map((elem,index) => {\r\n                                            return <option key={index} value={elem}>{elem}</option>\r\n                                        })}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <h4>Resultats trouvés : <strong>{total} </strong></h4>\r\n                </form>\r\n            </section>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n//-----------CONTAINER-------------------\r\nconst mapStateToProps = state => ({\r\n    total : getTotal(state),\r\n    filters : state.page.filters\r\n})\r\n\r\n\r\nconst mapDispatchToProps = {\r\n    saveFilters, fetchByFilters\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Filtrator2000)\r\n\r\n\r\n","//SAVES FILTERS\r\nimport {\r\n    RESET_IN_PAGE,\r\n    SAVE_ELEMENT_SCROLL_POSITION,\r\n    SAVE_FILTERS,\r\n    SAVE_COME_FROM,\r\n    SAVE_PAGINATION\r\n} from \"../constants/constants-page\";\r\n\r\nexport const saveFilters = (filters) => ({\r\n    type : SAVE_FILTERS,\r\n    payload : filters\r\n})\r\n\r\n//SAVA PAGES INFOS\r\nexport const savePagination = (filters) => ({\r\n    type : SAVE_PAGINATION,\r\n    payload : filters\r\n})\r\n\r\n//reset this\r\nexport const resetInPage = (resetThis) => ({\r\n    type : RESET_IN_PAGE,\r\n    payload : resetThis\r\n})\r\n\r\n//save element scroll postion\r\nexport const saveScrollElement = (offSetTop) => ({\r\n    type : SAVE_ELEMENT_SCROLL_POSITION,\r\n    payload : offSetTop\r\n})\r\n\r\n//save page come from\r\nexport const saveComeFrom = (comeFrom) => ({\r\n    type : SAVE_COME_FROM,\r\n    payload : comeFrom\r\n})\r\n\r\n","import {Immobilier} from \"../../../../models/immobilier\";\r\nimport Filtrator2000 from \"../../modules/filtrator2000/Filtrator2000\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport css  from './showImmos.module.css'\r\nimport {resetInPage, savePagination, saveScrollElement} from \"../../../../actions/actions-pages\";\r\nimport {connect} from \"react-redux\";\r\nimport React, {FunctionComponent, useEffect} from \"react\";\r\nimport {useHistory,useLocation} from \"react-router-dom\";\r\nimport {resetInImmo} from \"../../../../actions/actions-immos\";\r\nimport {getPageCount, getSliceImmos, getTotal} from \"../../../../selectors/immos-selector\";\r\n\r\n\r\ntype state = {\r\n    savePagination(pagination : any) : void,\r\n    saveScrollElement(offSetTop : number) : void,\r\n    resetInImmo(resetthis : string | Array<string>) : void,\r\n    resetInPage(resetThis : string | Array<string>) : void,\r\n    scroll : number,\r\n    immos : Array<Immobilier> | undefined,\r\n    status : string,\r\n    page :any,\r\n    total : number,\r\n    comeFrom : string,\r\n    pageCount : number,\r\n}\r\n\r\nconst ShowImmo : FunctionComponent<state> = ({scroll,comeFrom,immos,status,page,pageCount,total,...rest}) => {\r\n\r\n\r\n    let history = useHistory();\r\n    let location = useLocation()\r\n\r\n    useEffect(()=>{\r\n        if (comeFrom && scroll && comeFrom  === status ) {\r\n            window.scrollTo({top : scroll/1.5, left : 0,behavior :'smooth'})\r\n            rest.resetInPage(['scrollElement','comeFrom'])\r\n        }\r\n        let unlisten = history.listen(newLocation => {\r\n            let regex = new RegExp('(achat|location)/details/')\r\n            let newPath = newLocation.pathname\r\n            if (!newPath.match(regex) && newPath !== location.pathname ){\r\n                rest.resetInImmo('*')\r\n                rest.resetInPage('*')\r\n            }\r\n        })\r\n        return ()=> unlisten()\r\n    },[]) // eslint-disable-line\r\n\r\n    useEffect(()=>{\r\n        if(page.pagination.currentPage > pageCount){\r\n            let selectedPage = pageCount -1\r\n            const offset = selectedPage * page.pagination.perPage;\r\n            rest.savePagination({offset, currentPage : selectedPage})\r\n        }\r\n    },[total]) // eslint-disable-line\r\n\r\n    function handlePageChange(e) {\r\n        const selectedPage = e.selected;\r\n        const offset = selectedPage * page.pagination.perPage;\r\n        rest.savePagination({ currentPage : selectedPage, offset})\r\n    }\r\n\r\n    function handleDetailsClick(event,ref){\r\n        let offSetTop = event.target.offsetTop\r\n        rest.saveScrollElement(offSetTop)\r\n        history.push(`${status}/details/${ref}`)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Filtrator2000 status={status}/>\r\n            {immos && <ReactPaginate previousLabel={\"prev\"}\r\n                                     nextLabel={\"next\"}\r\n                                     breakLabel={\"...\"}\r\n                                     breakClassName={\"break-me\"}\r\n                                     pageCount={pageCount}\r\n                                     marginPagesDisplayed={2}\r\n                                     pageRangeDisplayed={5}\r\n                                     onPageChange={handlePageChange}\r\n                                     containerClassName={\"pagination\"}\r\n                                     activeClassName={\"active\"}\r\n                                     forcePage={page.pagination.currentPage}\r\n            />}\r\n\r\n            <section className={css.section}>\r\n                { immos && immos.map(immo => (\r\n\r\n                        <aside key={immo._id} onClick={(e)=> handleDetailsClick(e,immo.reference)} className={css.aside}>\r\n                                <h4><mark>{immo.status.toUpperCase()}</mark> : {immo.title}  </h4>\r\n\r\n                                <p>{immo.description}</p>\r\n                                <div className={css.div}>\r\n                                    <ul>\r\n                                        <li> Type : {immo.type} </li>\r\n                                        <li> Prix : {immo.price} </li>\r\n                                        <li> Surface : {immo.surface}</li>\r\n                                        <li> Pieces : {immo.rooms} </li>\r\n                                    </ul>\r\n\r\n                                    <ul>\r\n                                        <li>chambres : {immo.bedroom} </li>\r\n                                        <li>salons : {immo.living_room} </li>\r\n                                        <li>salles de bains : {immo.bathroom} </li>\r\n                                        <li>cuisines : {immo.kitchen} </li>\r\n                                        <li>garage : {immo.garage} </li>\r\n                                        <li>terrasse : {immo.terrace} </li>\r\n                                    </ul>\r\n\r\n                                    <ul>\r\n                                        <li>Ville : {immo.address.city}</li>\r\n                                        <li>CP : {immo.address.postal_code} </li>\r\n                                        <li>rue : {immo.address.street}</li>\r\n                                        <li>Longitude : {immo.address.longitude} </li>\r\n                                        <li>Latitude : {immo.address.latitude} </li>\r\n                                    </ul>\r\n                                </div>\r\n                        </aside>\r\n                    // </Link>\r\n\r\n                ))}\r\n            </section>\r\n\r\n        </>\r\n    );\r\n\r\n}\r\n\r\n//-----------CONTAINER-------------------\r\nconst mapStateToProps = state => ({\r\n    immos : getSliceImmos(state),\r\n    scroll : state.page.scrollElement,\r\n    page : state.page,\r\n    total : getTotal(state),\r\n    comeFrom : state.page.comeFrom,\r\n    pageCount : getPageCount(state)\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    savePagination,\r\n    saveScrollElement,\r\n    resetInImmo,\r\n    resetInPage,\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ShowImmo)\r\n\r\n","import React from 'react';\r\nimport ShowImmo from \"../../structure/showImmos/ShowImmo\";\r\n\r\nconst Louer = ()=> {\r\n    return (\r\n        <ShowImmo status={'achat'}/>\r\n    );\r\n}\r\n\r\nexport default Louer;\r\n","import React from 'react';\r\nimport ShowImmo from \"../../structure/showImmos/ShowImmo\";\r\n\r\nconst Louer = ()=> {\r\n    return (\r\n        <ShowImmo status={'location'}/>\r\n    );\r\n}\r\n\r\nexport default Louer;\r\n","import React from 'react';\r\n\r\nconst AboutUs = ()=> {\r\n    return (\r\n        <p>AboutUs</p>\r\n    );\r\n}\r\n\r\nexport default AboutUs;\r\n","import React from 'react';\r\n\r\nconst Articles = ()=> {\r\n    return (\r\n        <p>Articles</p>\r\n    );\r\n}\r\n\r\nexport default Articles;\r\n","import React, {FunctionComponent, useEffect} from 'react';\r\nimport {Immobilier} from \"../../../../models/immobilier\";\r\nimport {connect} from \"react-redux\";\r\nimport {fetchOneById, resetInImmo} from \"../../../../actions/actions-immos\";\r\nimport css from './detailsImmos.module.css'\r\nimport {\r\n    useHistory,\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport {saveComeFrom} from \"../../../../actions/actions-pages\";\r\n\r\n\r\ntype state = {\r\n    details : Immobilier,\r\n    fetchOneById(id : string) : void,\r\n    resetInImmo(resetThis : string | Array<string>) : void,\r\n    saveComeFrom(comeFrom : string) : void\r\n}\r\n\r\nconst DetailsImmo : FunctionComponent<state> = ({saveComeFrom,fetchOneById, details, resetInImmo})=> {\r\n\r\n    let { id,status } = useParams();\r\n    let banner : any = React.createRef()\r\n    let history = useHistory()\r\n\r\n    useEffect(()=>{\r\n        fetchOneById(id)\r\n\r\n        return ()=> resetInImmo('details')\r\n    },[])// eslint-disable-line\r\n\r\n\r\n\r\n    function handleMiniasClick (src){\r\n        let elem = banner.current\r\n        elem.setAttribute(\"src\", src);\r\n    }\r\n\r\n\r\n    function handleReturn(){\r\n        saveComeFrom(status)\r\n        history.goBack()\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {details &&\r\n            <div>\r\n                <div className={css.row}>\r\n                    <img src={details.banniere} onClick={()=> handleMiniasClick(details.banniere)} className={css.miniatures} alt=\"\"/>\r\n                    {details.photos?.map((elem,index) => <img src={elem} onClick={()=> handleMiniasClick(elem)}  className={css.miniatures} key={index} alt=\"\"/>)}\r\n                    <button onClick={handleReturn} style={{height : '3rem' }}>Retour à la liste </button>\r\n                </div>\r\n                <section className={css.row}>\r\n                    <div>\r\n                        <img className={css.banner} ref={banner} src={details.banniere} alt=\"\"/>\r\n                    </div>\r\n                    <aside>\r\n                            <h4><mark>{details.status.toUpperCase()}</mark> : {details.title}  </h4>\r\n\r\n                            <p>{details.description}</p>\r\n                            <div className={css.div}>\r\n                                <ul>\r\n                                    <li> Type : {details.type} </li>\r\n                                    <li> Surface : {details.surface}</li>\r\n                                    <li> Pieces : {details.rooms} </li>\r\n                                </ul>\r\n\r\n                                <ul>\r\n                                    <li>chambres : {details.bedroom} </li>\r\n                                    <li>salons : {details.living_room} </li>\r\n                                    <li>salles de bains : {details.bathroom} </li>\r\n                                    <li>cuisines : {details.kitchen} </li>\r\n                                    <li>garage : {details.garage} </li>\r\n                                    <li>terrasse : {details.terrace} </li>\r\n                                </ul>\r\n\r\n                                <ul>\r\n                                    <li>Ville : {details.address.city}</li>\r\n                                    <li>CP : {details.address.postal_code} </li>\r\n                                    <li>rue : {details.address.street}</li>\r\n                                    <li>Longitude : {details.address.longitude} </li>\r\n                                    <li>Latitude : {details.address.latitude} </li>\r\n                                </ul>\r\n                                {details.status === 'achat' && <h2> Prix : <mark>{details.price.toLocaleString()}  €</mark> </h2> }\r\n                                {details.status === 'location' && <h2> Prix : <mark>{Math.ceil(details.price / 900).toLocaleString()}  €</mark> </h2> }\r\n                            </div>\r\n                    </aside>\r\n                </section>\r\n                \r\n\r\n            </div>}\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    details : state.immobilier.details\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    fetchOneById,\r\n    resetInImmo,\r\n    saveComeFrom\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(DetailsImmo)\r\n\r\n\r\n","import React, {FunctionComponent} from 'react';\r\nimport css from './header.module.css'\r\nimport {Link} from 'react-router-dom'\r\nimport {authLogout} from \"../../../../actions/actions-auth\";\r\nimport {connect} from \"react-redux\";\r\nimport {User} from \"../../../../models/user\";\r\n\r\ntype state = {\r\n    authLogout() : void,\r\n    auth : {\r\n        isAuth : boolean,\r\n        user : User\r\n    }\r\n\r\n}\r\n\r\nconst Header : FunctionComponent<state> = ({authLogout,auth,...rest})=> {\r\n\r\n    const handleLogout = ()=>{\r\n        authLogout()\r\n    }\r\n\r\n    return (\r\n        <header  className={css.menuHeader} >\r\n            <p>Transactimo</p>\r\n            {auth.isAuth && auth.user.isAdmin &&\r\n            <button><Link className={css.Link} to='/admin'>Admin</Link></button>}\r\n            <ul className={css.ulHeader}>\r\n                <Link className={css.Link} to='/accueil'>Accueil</Link>\r\n                <Link to='/immobilier/acheter'>Acheter</Link>\r\n                <Link to='/immobilier/louer'>Louer</Link>\r\n                <Link to='/articles'>Articles</Link>\r\n            </ul>\r\n\r\n            <ul className={css.ulHeader}>\r\n                <Link to='/aPropos'>L'agence</Link>\r\n                <Link to='/contact'>Contact</Link>\r\n                {!auth.isAuth && <>\r\n                    <button><Link to='/auth/connexion'>Connexion</Link></button>\r\n                    <button><Link to='/auth/inscription'>Inscription</Link></button>\r\n                </>}\r\n                {auth.isAuth && <>\r\n                    <button><Link to='/auth/compte'>Mon compte</Link></button>\r\n                    <button onClick={handleLogout}>Deconnexion</button>\r\n                </>}\r\n\r\n                {}\r\n            </ul>\r\n        </header>\r\n\r\n    );\r\n}\r\nconst mapStateToProps = (state:any)=>({\r\n    auth : state.auth,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    authLogout,\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Header)\r\n\r\n","import React from 'react';\r\n\r\nconst Footer = ()=> {\r\n    return (\r\n        <div style={{background:\"lightgray\"}}>\r\n            <hr/>\r\n            <hr/>\r\n            <hr/>\r\n            <h2 style={{color : \"red\",textAlign:'center'}}>Footer</h2>\r\n            <hr/>\r\n            <hr/>\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nconst ItemArticle = ()=> {\r\n    return (\r\n        <p>ItemArticle</p>\r\n    );\r\n}\r\n\r\nexport default ItemArticle;\r\n","import React from 'react';\r\n\r\nconst Error404 = ()=> {\r\n    return (\r\n        <p>Probleme Error 404</p>\r\n    );\r\n}\r\n\r\nexport default Error404;\r\n","import React, {FunctionComponent } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {fetchLogin} from \"../../../../actions/actions-auth\";\r\n\r\ntype state = {\r\n    fetchLogin( data : Object) : any,\r\n    isAuth : boolean\r\n}\r\n\r\nconst Login : FunctionComponent<state> = ({fetchLogin,isAuth})=> {\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        let elems = e.target.elements\r\n        let data : any = {}\r\n        for (let elem of elems ) {\r\n            if(elem.type !== 'submit'){\r\n                data[elem.name] = elem.value\r\n            }\r\n        }\r\n        fetchLogin(data)\r\n    }\r\n\r\n\r\n    return (\r\n            <>\r\n                <h1>Login</h1>\r\n                <form onSubmit={handleSubmit}>\r\n                    <div>\r\n                        <label>Mail\r\n                            <input type=\"text\" name={'mail'}/>\r\n                        </label>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label>Mot de passe\r\n                            <input type=\"password\" name={'mdp'}/>\r\n                        </label>\r\n                    </div>\r\n\r\n                    <button type={'submit'}>Connexion</button>\r\n                </form>\r\n            </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state :any) => ({\r\n    isAuth : state.isAuth\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    fetchLogin,\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Login)\r\n\r\n","import React, {FunctionComponent, useEffect} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {fetchRegister, resetInAuth} from \"../../../../actions/actions-auth\";\r\nimport {useHistory} from 'react-router'\r\n\r\ntype state = {\r\n    fetchRegister( data : Object) : any,\r\n    respSuccess : Object\r\n}\r\n\r\nconst Register : FunctionComponent<state> = ({fetchRegister,respSuccess})=> {\r\n\r\n    let history = useHistory()\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        let elems = e.target.elements\r\n        let data : any = {}\r\n        for (let elem of elems ) {\r\n            if(elem.type === 'checkbox'){\r\n                data[elem.name] = elem.checked\r\n            }\r\n            else if(elem.type !== 'submit'){\r\n                data[elem.name] = elem.value\r\n\r\n            }\r\n        }\r\n        fetchRegister(data)\r\n    }\r\n\r\n    useEffect(()=>{\r\n\r\n        if (respSuccess){\r\n            resetInAuth('respSuccess')\r\n            history.push('/auth/connexion')\r\n        }\r\n    },[respSuccess]) // eslint-disable-line\r\n\r\n    return (\r\n        <>\r\n            <h1>Login</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <label>Mail\r\n                        <input required type=\"text\" name={'mail'}/>\r\n                    </label>\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Mot de passe\r\n                        <input required type=\"password\" name={'mdp'}/>\r\n                    </label>\r\n                </div>\r\n\r\n                <div>\r\n                    <select required name=\"sexe\">\r\n                        <option value=\"homme\">Homme</option>\r\n                        <option value=\"femme\">Femme</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Nom\r\n                        <input required type=\"text\" name={'nom'}/>\r\n                    </label>\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Prenom\r\n                        <input required type=\"text\" name={'prenom'}/>\r\n                    </label>\r\n                </div>\r\n\r\n                <div><label>Telephone\r\n                    <input required type=\"number\" name=\"phone\"/>\r\n                </label></div>\r\n\r\n                <div>\r\n                    <label>Pays\r\n                        <input required type=\"text\" name={'pays'}/>\r\n                    </label>\r\n                </div>\r\n\r\n                <div><label>Ville\r\n                    <input required type=\"text\" name=\"ville\"/>\r\n                </label></div>\r\n\r\n                <div><label>Rue\r\n                    <input required type=\"text\" name=\"street\"/>\r\n                </label></div>\r\n\r\n                <div><label>Code postal\r\n                    <input required type=\"number\" name=\"cp\"/>\r\n                </label></div>\r\n\r\n                <div><label>Voulez vous recevoir des pubs ...\r\n                    <input type=\"checkbox\" name=\"pub1\"/>\r\n                </label></div>\r\n\r\n                <div><label>Voulez vous recevoir des promos ...\r\n                    <input type=\"checkbox\" name=\"pub2\"/>\r\n                </label></div>\r\n\r\n\r\n\r\n                <button type={'submit'}>Inscription</button>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state :any) => ({\r\n    respSuccess : state.auth.respSuccess\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    fetchRegister,\r\n    resetInAuth\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Register)\r\n\r\n","import React from 'react';\r\n\r\nconst Profile = ()=> {\r\n    return (\r\n            <p>Profile</p>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\n\r\n\r\nconst PopUpContact = ()=> {\r\n    return (\r\n        <p className=\"yellow\">Pop up contact</p>\r\n    );\r\n}\r\n\r\nexport default PopUpContact;\r\n","\r\nimport React from 'react';\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\ntype state = {\r\n    component : any,\r\n    guard : boolean | undefined |null,\r\n    path?  :string\r\n}\r\n\r\nconst GuardRoute = ({component, guard, ...rest}: state) => {\r\n    const routeComponent = (props: any) => (\r\n        guard\r\n            ? React.createElement(component, props)\r\n            : <Redirect to={{pathname: '/'}}/>\r\n    );\r\n\r\n    return <Route {...rest} render={routeComponent}/>;\r\n};\r\n\r\nexport default GuardRoute\r\n","import {createSelector} from \"reselect\";\r\n\r\nconst selectUser = state => state.auth.user\r\nconst selectIsAuth = state => state.auth.isAuth\r\n\r\n\r\nexport const getIsAdmin = createSelector(\r\n    [selectUser,selectIsAuth],\r\n    (user,isAuth) => {\r\n        if(user && isAuth ){\r\n            return user.isAdmin\r\n        }\r\n        return false\r\n    }\r\n)\r\n","import React, {FunctionComponent, lazy, Suspense} from 'react'\r\nimport {BrowserRouter as RouterHtml , Route, Switch, Redirect} from \"react-router-dom\";\r\n\r\nimport Accueil from \"./components/front-pages/pages/accueil/Accueil\";\r\nimport Acheter from \"./components/front-pages/pages/acheter/Acheter\";\r\nimport Louer from \"./components/front-pages/pages/louer/Louer\";\r\nimport AboutUs from \"./components/front-pages/pages/about-us/About-us\";\r\nimport Articles from \"./components/front-pages/pages/articles/Articles\";\r\nimport DetailsImmo from \"./components/front-pages/pages/details-immo/Details-immo\";\r\nimport Header from \"./components/front-pages/structure/header/Header\";\r\nimport Footer from \"./components/front-pages/structure/footer/Footer\";\r\nimport ItemArticle from \"./components/front-pages/pages/articles/item-article/Item-article\";\r\nimport Error404 from \"./components/error404\";\r\nimport Login from \"./components/front-pages/auth/login/Login\";\r\nimport Register from \"./components/front-pages/auth/register/Register\";\r\nimport Profile from \"./components/front-pages/auth/profile/Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport PopUpContact from \"./components/front-pages/modules/pop-up-contact/Pop-up-contact\";\r\nimport GuardRoute from \"./components/front-pages/auth/guardRoute/GuardRoute\";\r\nimport {getIsAdmin} from \"./selectors/auth-selector\";\r\n\r\nconst AdminPannel = lazy(()=> import(\"./components/admin-pages/admin-pannel/Admin-pannel\"))\r\n\r\ntype state = {\r\n    error? : { //NE PAS OUBLIER DE METTRE LES VARIABLES EN OPTIONNELS !!!!!\r\n            title : string,\r\n            message : string\r\n    } | any,\r\n    isAuth? : boolean\r\n    isAdmin? : boolean,\r\n    respSuccess? : any\r\n}\r\n\r\nconst Router : FunctionComponent<state> = ({error,isAuth,isAdmin,respSuccess}) => {\r\n  return (\r\n      <>\r\n          {error.response && <div style={{background : \"orangered\"}}>\r\n              <h3>Une erreur est survenue :</h3>\r\n              <h4>{error.response.title}</h4>\r\n              <p>{error.response.message}</p>\r\n          </div>}\r\n\r\n          {respSuccess && respSuccess.success && <div style={{background : \"lightgreen\"}}>\r\n              <h3>Bravo :</h3>\r\n              <h4>{respSuccess.success.title}</h4>\r\n              <p>{respSuccess.success.message}</p>\r\n          </div>}\r\n\r\n          <RouterHtml>\r\n              <Switch>\r\n\r\n                  <Route path=\"/admin\"  render={() => (\r\n                      //Lazy loading\r\n                      <Suspense fallback={<h1>Chargement...</h1>}>\r\n                          <GuardRoute guard={isAuth && isAdmin}  component={AdminPannel}/>\r\n                      </Suspense>\r\n                  )}\r\n                  />\r\n                  <Redirect exact from=\"/\" to={`/accueil`}  />\r\n                  <Route path=\"/\" render={() => (\r\n                      <>\r\n                          <Header/>\r\n\r\n                          <Switch>\r\n                              <Route path='/accueil' component={Accueil} />\r\n                              <Route path='/aPropos' component={AboutUs} />\r\n                              <Route path='/contact' component={PopUpContact} />\r\n                              <Route path=\"/articles\" render={({ match: { url } }) => (\r\n                                  <>\r\n                                      <Route path={`${url}`} exact component={Articles} />\r\n                                      <Route path={`${url}/details/:id`} component={ItemArticle} />\r\n                                  </>\r\n                              )}\r\n                              />\r\n                              <Route path=\"/auth\" render={({ match: { url } }) => (\r\n                                  <>\r\n                                      <GuardRoute path={`${url}/connexion`} guard={!isAuth} component={Login} />\r\n                                      <GuardRoute path={`${url}/inscription`} guard={!isAuth} component={Register} />\r\n                                      <GuardRoute path={`${url}/compte`} guard={isAuth} component={Profile} />\r\n                                  </>\r\n                              )}\r\n                              />\r\n                              <Route path=\"/immobilier\" render={({ match: { url } }) => (\r\n                                  <>\r\n                                      <Route path={`${url}/acheter`}  component={Acheter} />\r\n                                      <Route path={`${url}/louer`} component={Louer} />\r\n                                      <Route path={`${url}/:status/details/:id`} component={DetailsImmo} />\r\n                                  </>\r\n                              )}\r\n                              />\r\n                              <Route component={Error404} />\r\n                          </Switch>\r\n\r\n                          <Footer/>\r\n                      </>\r\n                  )}\r\n                  />\r\n\r\n              </Switch>\r\n          </RouterHtml>\r\n      </>\r\n\r\n  );\r\n}\r\n\r\n//-------------------Container -------------------------\r\nconst mapStateToProps = state => ({\r\n    error : state.error,\r\n    respSuccess : state.admin.respSuccess,\r\n    isAuth : state.auth.isAuth,\r\n    isAdmin : getIsAdmin(state)\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    null\r\n)(Router)\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {createEpicMiddleware} from \"redux-observable\";\r\nimport {applyMiddleware, createStore} from \"redux\";\r\nimport rootReducer from \"./reducers/root-reducer\";\r\nimport {Provider} from \"react-redux\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nimport {rootEpic} from \"./middlewares/epics/epics-root\";\r\nimport Router from \"./Router\";\r\n\r\nconst epicMiddleware = createEpicMiddleware()\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(\r\n    applyMiddleware(epicMiddleware),\r\n));\r\n\r\nepicMiddleware.run(rootEpic)\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n                <Provider store={store}>\r\n                    <Router />\r\n                </Provider>\r\n            </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}